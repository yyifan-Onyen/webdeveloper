apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: backend
          image: yyifan.azurecr.io/backend:6
          env:
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
          ports:
            - containerPort: 80
              name: backend
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: frontend
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: frontend
          image: yyifan.azurecr.io/frontend:6
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: 250m
            limits:
              cpu: 500m
          env:
            - name: SERVER_PORT
              value: "80"
            - name: BACKEND_HOST
              value: "http://backend-service"
            - name: NOSQL_HOST
              value: "http://nosql-service"
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: frontend